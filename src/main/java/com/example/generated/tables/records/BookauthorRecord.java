/*
 * This file is generated by jOOQ.
 */
package com.example.generated.tables.records;


import com.example.generated.tables.Bookauthor;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class BookauthorRecord extends UpdatableRecordImpl<BookauthorRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.bookauthor.book_id</code>.
     */
    public void setBookId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.bookauthor.book_id</code>.
     */
    public Integer getBookId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.bookauthor.author_id</code>.
     */
    public void setAuthorId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.bookauthor.author_id</code>.
     */
    public Integer getAuthorId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookauthorRecord
     */
    public BookauthorRecord() {
        super(Bookauthor.BOOKAUTHOR);
    }

    /**
     * Create a detached, initialised BookauthorRecord
     */
    public BookauthorRecord(Integer bookId, Integer authorId) {
        super(Bookauthor.BOOKAUTHOR);

        setBookId(bookId);
        setAuthorId(authorId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised BookauthorRecord
     */
    public BookauthorRecord(com.example.generated.tables.pojos.Bookauthor value) {
        super(Bookauthor.BOOKAUTHOR);

        if (value != null) {
            setBookId(value.getBookId());
            setAuthorId(value.getAuthorId());
            resetChangedOnNotNull();
        }
    }
}
